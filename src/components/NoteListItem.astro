---
import { Icon } from "astro-icon/components";

interface Props {
	title: string;
	description?: string;
	tags?: string[];
	order?: number;
	href: string;
	index?: number;
	class?: string;
}

const { title, description, tags = [], order, href, index = 0 } = Astro.props;
---

<a
	href={href}
	class="note-list-item card-base group hover:scale-[1.02] transition-all duration-300 onload-animation"
	style={index !== undefined ? `animation-delay: calc(var(--content-delay) + ${index * 50}ms)` : ''}
>
	<div class="px-6 py-5 flex items-start gap-4">
		<!-- 序号 -->
		<div class="flex-shrink-0 w-8 h-8 rounded-lg bg-[oklch(0.95_0.02_var(--hue))] dark:bg-[oklch(0.25_0.03_var(--hue))] flex items-center justify-center text-sm font-bold text-[oklch(0.5_0.14_var(--hue))] group-hover:bg-[oklch(0.7_0.14_var(--hue))] group-hover:text-white transition-colors">
			{order || index + 1}
		</div>

		<!-- 内容 -->
		<div class="flex-1 min-w-0">
			<h3 class="text-xl font-bold mb-1 text-black/90 dark:text-white/90 group-hover:text-[oklch(0.7_0.14_var(--hue))] transition-colors">
				{title}
			</h3>
			
			{description && (
				<p class="text-sm text-neutral-600 dark:text-neutral-400 mb-2 line-clamp-2">
					{description}
				</p>
			)}

			<!-- 标签 -->
			{tags.length > 0 && (
				<div class="flex flex-wrap gap-2 mt-2">
					{tags.slice(0, 3).map(tag => (
						<span class="text-xs px-2 py-0.5 rounded bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400">
							{tag}
						</span>
					))}
				</div>
			)}
		</div>

		<!-- 箭头 -->
		<div class="flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity">
			<Icon 
				name="material-symbols:arrow-forward" 
				class="text-2xl text-[oklch(0.7_0.14_var(--hue))]"
			/>
		</div>
	</div>
</a>

<style>
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>
